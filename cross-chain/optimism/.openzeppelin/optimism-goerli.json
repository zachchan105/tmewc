{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x91Fe7128f74dBd4F031ea3D90FC5Ea4DCfD81818",
    "txHash": "0x0d7e2a225846fc0d467b6487c0eb724266fbee2b959fbbe1325269f43a454339"
  },
  "proxies": [
    {
      "address": "0x1a53759DE2eADf73bd0b05c07a4F1F5B7912dA3d",
      "txHash": "0xdd6d13c09c3045099e9d6066cd1ebc1353714aee8d39a54599ab15a402854008",
      "kind": "transparent"
    },
    {
      "address": "0x6449F4381f3d63bDfb36B3bDc375724aD3cD4621",
      "txHash": "0x805d4430b11c0de578b14b17a0c92305d5f9bd158819e15c8969a12477861d41",
      "kind": "transparent"
    }
  ],
  "impls": {
    "1eca3b29684e1fcc811e32be6ee7e72cd846a93f69838508595506ae72555f18": {
      "address": "0x5D8e618f44A59dd528cce58d00801F4C8e5cfa8D",
      "txHash": "0x12984eeac49aaf61b2c7195c37966d3124654fbc1974d2beec80e951ee8c7085",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "151",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "152",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(Counter)3297_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "204",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "304",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "isMinter",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "L2TMEWC",
            "src": "@zachchan105/tmewc/contracts/l2/L2TMEWC.sol:76"
          },
          {
            "label": "minters",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_address)dyn_storage",
            "contract": "L2TMEWC",
            "src": "@zachchan105/tmewc/contracts/l2/L2TMEWC.sol:77"
          },
          {
            "label": "isGuardian",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "L2TMEWC",
            "src": "@zachchan105/tmewc/contracts/l2/L2TMEWC.sol:85"
          },
          {
            "label": "guardians",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_address)dyn_storage",
            "contract": "L2TMEWC",
            "src": "@zachchan105/tmewc/contracts/l2/L2TMEWC.sol:89"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)3297_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3297_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "70974f3ab30d1010f875de7eebcbde08a1b6c71845f5272c23be8f95af866a64": {
      "address": "0x73A63e2Be2D911dc7eFAc189Bfdf48FbB6532B5b",
      "txHash": "0x4d3bdde5365c63cceb585fc671be3d7ef92ef1b67a83dbb61440999515084659",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IWormholeTokenBridge)518",
            "contract": "L2WormholeGateway",
            "src": "@zachchan105/tmewc/contracts/l2/L2WormholeGateway.sol:122"
          },
          {
            "label": "bridgeToken",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IERC20Upgradeable)2252",
            "contract": "L2WormholeGateway",
            "src": "@zachchan105/tmewc/contracts/l2/L2WormholeGateway.sol:123"
          },
          {
            "label": "tmewc",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(L2TMEWC)443",
            "contract": "L2WormholeGateway",
            "src": "@zachchan105/tmewc/contracts/l2/L2WormholeGateway.sol:124"
          },
          {
            "label": "gateways",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint16,t_bytes32)",
            "contract": "L2WormholeGateway",
            "src": "@zachchan105/tmewc/contracts/l2/L2WormholeGateway.sol:136"
          },
          {
            "label": "mintingLimit",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "L2WormholeGateway",
            "src": "@zachchan105/tmewc/contracts/l2/L2WormholeGateway.sol:147"
          },
          {
            "label": "mintedAmount",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "L2WormholeGateway",
            "src": "@zachchan105/tmewc/contracts/l2/L2WormholeGateway.sol:151"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2252": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IWormholeTokenBridge)518": {
            "label": "contract IWormholeTokenBridge",
            "numberOfBytes": "20"
          },
          "t_contract(L2TMEWC)443": {
            "label": "contract L2TMEWC",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint16,t_bytes32)": {
            "label": "mapping(uint16 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
